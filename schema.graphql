### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type DeliveryMethod {
  active: Boolean!
  admitCash: Boolean!
  id: Int!
  name: NonEmptyString!
  price: Float!
  requestDirection: Boolean!
}

input DeliveryMethodInput {
  active: Boolean
  admitCash: Boolean
  id: Int
  name: NonEmptyString
  price: Float
  requestDirection: Boolean
}

"""
A field whose value conforms to the standard internet email address format as specified in RFC822: https://www.w3.org/Protocols/rfc822/.
"""
scalar EmailAddress @specifiedBy(url: "https://www.w3.org/Protocols/rfc822/")

type ImageAttachment {
  id: Int!
  normal: String!
  original: String!
  thumbnail: String!
}

input ImageAttachmentInput {
  normal: String
  original: String
  thumbnail: String
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

type Mutation {
  loginUser(data: UserLoginInput!): UserTokenPayload
  registerUser(data: UserRegisterInput!): UserTokenPayload
  updateShop(data: ShopUpdateInput!): ShopAccount
  updateUser(data: UserUpdateInput!): User
  upsertDeliveryMethods(data: [DeliveryMethodInput]!): [DeliveryMethod]
}

"""A string that cannot be passed as an empty value"""
scalar NonEmptyString

enum PaymentMethodEnum {
  FIAT
  PAGOMOVIL
  PAYPAL
  ZELLE
}

"""
A field whose value conforms to the standard E.164 format as specified in: https://en.wikipedia.org/wiki/E.164. Basically this is +17895551234.
"""
scalar PhoneNumber

type Query {
  getDeliveryMethod(id: Int!): DeliveryMethod
  getDeliveryMethods(
    """If is not defined, active and inactive are listed"""
    active: Boolean

    """Delivery method id"""
    id: Int

    """Shop id"""
    shopId: Int

    """Shop slug"""
    shopSlug: String
  ): [DeliveryMethod]
  getShop(id: Int, slug: String): ShopAccount
  getShopFromToken: ShopAccount
  getUserFromToken: User
}

type ShopAccount {
  facebook: NonEmptyString
  hasWhatsapp: Boolean!
  id: Int!
  instagram: NonEmptyString!
  logo: ImageAttachment
  name: NonEmptyString!
  paymentMethods: [PaymentMethodEnum]
  phoneNumber: PhoneNumber!
  slug: NonEmptyString!
  tiktok: NonEmptyString
}

input ShopUpdateInput {
  facebook: NonEmptyString
  hasWhatsapp: Boolean
  instagram: NonEmptyString
  logo: ImageAttachmentInput
  name: NonEmptyString
  paymentMethods: [PaymentMethodEnum]
  phoneNumber: PhoneNumber
  slug: NonEmptyString
  tiktok: NonEmptyString
}

type User {
  createdAt: DateTime
  email: EmailAddress!
  id: Int!
  name: NonEmptyString!
  shop: ShopAccount!
}

input UserLoginInput {
  email: EmailAddress!
  password: NonEmptyString!
}

input UserRegisterInput {
  email: EmailAddress!
  instagram: NonEmptyString!
  name: NonEmptyString!
  password: NonEmptyString!
  phoneNumber: PhoneNumber!
  shopName: NonEmptyString!
  shopSlug: NonEmptyString!
}

type UserTokenPayload {
  token: JWT!
  user: User!
}

input UserUpdateInput {
  email: EmailAddress
  name: NonEmptyString
  password: NonEmptyString
  shop: ShopUpdateInput
}
